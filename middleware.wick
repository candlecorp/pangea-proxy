kind: wick/component@v1
name: middleware
metadata:
  version: 0.0.1
  description: middleware component for pangea
  licenses:
  - Apache-2.0
package:
  registry:
    host: registry.candle.dev
    namespace: pangea
import:
  - name: http
    component:
      kind: wick/component/types@v1
      ref: registry.candle.dev/types/http:0.4.0
  - name: pangea
    component:
      kind: wick/component/manifest@v1
      ref: registry.candle.dev/pangea/pangea:0.1.0
      with:
        token: '{{ ctx.root_config.token }}'
        url: '{{ ctx.root_config.url }}'
  - name: client_ip
    component:
      kind: wick/component/manifest@v1
      ref: registry.candle.dev/candle/http_client_ip:0.2.0
  - name: http_headers
    component:
      kind: wick/component/manifest@v1
      ref: registry.candle.dev/candle/http-headers:0.1.0
component:
  kind: wick/component/composite@v1
  with:
    - name: token
      type: string
    - name: url
      type: string
  operations:
  - name: enrich_request
    inputs: 
      - name: request
        type: http::request
    outputs:
      - name: output
        type: http::RequestMiddlewareResponse
    uses: 
      - name: GET_CLIENT_IP
        operation: client_ip::get_ip
      - name: IP_COUNTRY_CODE
        operation: pangea::ip_country_code
      - name: ADD_HEADER
        operation: http_headers::add
        with:
          header: x-pangea-country-code
    flow:
    - <>.request -> GET_CLIENT_IP.request
    - GET_CLIENT_IP.ip -> IP_COUNTRY_CODE.ip
    - <>.request -> ADD_HEADER.input
    - IP_COUNTRY_CODE.country_code -> ADD_HEADER.value
    - ADD_HEADER.output -> <>.output
tests:
  - name: update_request
    with:
      token: "{{ ctx.env.PANGEA_TOKEN }}"
      url: "{{ ctx.env.PANGEA_URL }}"
    cases:
      - name: get_country_code
        operation: enrich_request
        inputs:
          - name: request
            value:
              method: Get
              scheme: Http
              path: "/"
              uri: "http://localhost:8080/"
              version: Http11
              authority: "localhost:8080"
              remote_addr: "91.108.2.98"
              query_parameters: {}
              headers:
                host:
                  - "localhost:8080"
                user-agent:
                  - "curl/7.64.1"
                accept:
                  - "*/*"
        outputs:
          - name: request
            value:
              authority: "localhost:8080"
              headers:
                accept:
                  - "*/*"
                host:
                  - "localhost:8080"
                user-agent:
                  - "curl/7.64.1"
                x-pangea-country-code:
                  - "ru"
              method: Get
              path: "/"
              remote_addr: "91.108.2.98"
              scheme: "Http"
              uri: "http://localhost:8080/"
              version: "1.1"
          - name: request
            flags:
              done: true
